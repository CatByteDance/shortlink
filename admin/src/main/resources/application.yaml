server:
  port: 8002

spring:
  datasource:
    # ShardingSphere 对 Driver 自定义，实现分库分表等隐藏逻辑
    driver-class-name: org.apache.shardingsphere.driver.ShardingSphereDriver
    # ShardingSphere 配置文件路径
    url: jdbc:shardingsphere:classpath:shardingsphere-config.yaml

  data:
    redis:
#     127.0.0.1：表示本机，不能用于连接到虚拟机上的 Redis 服务。要用虚拟机ip地址
      host: 192.168.248.100
      port: 6379
      password: 123456

#   Spring Boot 默认的 数据库连接池。HikariCP 是一个高效、轻量级的连接池，它管理数据库连接的创建、维护和回收。
  #   什么是 数据库连接池？
    # 在每次执行数据库操作时，如果创建新的数据库连接，开销会很大。为了解决这个问题，连接池会预先创建一批连接，当需要使用时从池中获取，使用后再归还。
    hikari:
      # 在连接池从连接池中获取一个数据库连接时，它会先执行这个查询（select 1），来确保这个连接是有效的并且可以正常使用。
      connection-test-query: select 1
      # 定义了从连接池中获取连接的最长等待时间，单位是毫秒。
      connection-timeout: 20000
      # 当一个数据库连接在连接池中空闲的时间超过这个值时，它会被自动释放（关闭）。如果有连接不被使用，它们会在 5 分钟后被关闭，以节省资源。
      idle-timeout: 300000
      # 设置连接池中的最大连接数。如果你的应用程序有多个并发数据库操作，同时最多只能有 5 个连接在使用。
      maximum-pool-size: 5
      # 设置连接池中的最小空闲连接数。即使没有活动的数据库操作，连接池仍然会保持最少 5 个空闲连接，确保在需要时能够快速分配，而不需要等待连接创建。
      minimum-idle: 5